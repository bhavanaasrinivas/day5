#include <stdio.h>
 struct fraction{
     int num[20];
     int den[20];
     int sum;
     int n;
 };
 struct fraction input()
 {
     struct fraction s;
     printf("enter the number of fractions");
     scanf("%d",&s.n);
     printf("enter the numerators");
     for(int i=0;i<s.n;i++)
     {
        scanf("%d",&s.num[i]);
     }
     printf("enter the denominators");
     for(int i=0;i<s.n;i++)
     {
        scanf("%d",&s.den[i]);
     }
     return s;
 }
 void compute(struct fraction s)
 {
    
 }
 void output(struct fraction s)
 {
     printf("the fractions are");
    for(int i=0;i<s.n;i++)
    {
      printf("%d/%d\n",s.num[i],s.den[i]);
    }
 }
 int main()
 {
    struct fraction s; 
     s=input();
     output(s);
 } 
********************************************************************************************************************************************
#include <stdio.h>
struct fraction
{
  int numerator[20];
  int denomenator[20];
};
struct frac
{
  int n;
  int d;
  struct fraction *s;
  int size;
};
struct frac getfractions ()
{
  struct frac f;
  printf ("enter the number of fractions");
  scanf ("%d",&f.size);
  for (int i = 0; i < f.size; i++)
    {
      printf ("enter the numerator");
      scanf ("%d", &f.s[i].numerator);
      printf ("enter the denomenator");
      scanf ("%d", &f.s[i].denomenator);
    }
  return f;
}
struct frac fractionsum()
{
    f.n=f.s[0].numerator;
    f.d=f.s[0].denomenator;
    for(int i=0;i<f.size;i++)
    {
        f.d=f.d*f.s[i].denomenator;
        f.n=f.n
    }
    
}

struct frac output ()
  {

  }
****************************************************************************************************************************************
#include<malloc.h>
#include <stdio.h>
#include<math.h>
struct fraction
{
  int numerator;
  int denomenator;
};
struct frac
{
  int n;
  int d;
  struct fraction *s;
  int size;
};

struct frac getfractions ()
{
  struct frac f;
  printf ("enter the number of fractions");
  scanf ("%d",&f.size);
  f.s=malloc(f.size*sizeof(struct fraction));
  for (int i = 0; i < f.size; i++)
    {
      printf ("enter the numerator");
      scanf ("%d", &f.s[i].numerator);
      printf ("enter the denomenator");
      scanf ("%d", &f.s[i].denomenator);
    }
  return f;
}
struct frac fractionsum(struct frac f)
{
    int result,gcd;
    f.n=f.s[0].numerator;
    f.d=f.s[0].denomenator;
    for(int i=1;i<f.size;i++)
    {
        f.d=f.d*f.s[i].denomenator;
        f.n=f.n*f.s[i].denomenator+f.s[i].numerator*f.d;
    }
    result=gcd(f.n,f.d);
    f.n=f.n/result;
    f.d=f.d/result;
    return f;
}

struct frac output (struct frac f)
  {
      printf("%d,%d",f.n,f.d);
  }
int main()
{
    struct frac a;
    a=getfractions();
    a=fractionsum(a);
    output(a);
    return 0;
}
**************************************************************************************************************************************
#include <stdio.h>
struct fraction
{
  int numerator[20];
  int denomenator[20];
};
struct frac
{
  int n;
  int d;
  struct fraction *s;
  int size;
};
struct frac getfractions ()
{
  struct frac f;
  printf ("enter the number of fractions");
  scanf ("%d",&f.size);
  for (int i = 0; i < f.size; i++)
    {
      printf ("enter the numerator");
      scanf ("%d", &f.s[i].numerator);
      printf ("enter the denomenator");
      scanf ("%d", &f.s[i].denomenator);
    }
  return f;
}
struct frac fractionsum(struct frac f)
{
    f.n=f.s[0].numerator;
    f.d=f.s[0].denomenator;
    for(int i=0;i<f.size;i++)
    {
        f.d=f.d*f.s[i].denomenator;
        f.n=f.n*f.s[i].denomenator+f.s[i].numerator*f.d;
    }
    
}

struct frac output ()
  {

  }
*************************************************************************************************************************************
#include <stdio.h>

struct frac
{
  int numerator;
  int denomenator;
};
struct fractions
{
  int n;
  int d;
  struct frac s[100];
  int size;
};
struct fractions getfractions ()
{
  struct fractions f;
  printf ("enter the number of fractions");
  scanf ("%d",&f.size);
  
  for (int i = 0; i < f.size; i++)
    {
      printf ("enter the numerator");
      scanf ("%d", &f.s[i].numerator);
      printf ("enter the denomenator");
      scanf ("%d", &f.s[i].denomenator);
    }
  return f;
}
struct fractions fractionsum(struct fractions f)
{
    f.n=f.s[0].numerator;
    f.d=f.s[0].denomenator;
    for(int i=1;i<f.size;i++)
    {
        f.d=f.d*f.s[i].denomenator;
        f.n=f.n*f.s[i].denomenator+f.s[i].numerator*f.d;
    }
    return f;
}

struct fractions output (struct fractions f)

  {
      printf("%d,%d",f.n,f.d);

  }
  int main()
  {
      struct fractions f;
      f=getfractions();
      f=fractionsum(f);
      output(f);
      return 0;
 }
****************************************************************************************************************************************
#include <stdio.h>

struct frac
{
  int numerator;
  int denomenator;
};
struct fractions
{
  struct frac s[100];
  int size;
};
struct fractions getfractions ()
{
  struct fractions f;
  printf ("enter the number of fractions");
  scanf ("%d",&f.size);

  for (int i = 0; i < f.size; i++)
    {
      printf ("enter the numerator");
      scanf ("%d", &f.s[i].numerator);
      printf ("enter the denomenator");
      scanf ("%d", &f.s[i].denomenator);
    }
  return f;
}
struct fractions fractionsum(struct fractions f)
{
    struct fractions f;
    f.s.numerator=f.s[0].numerator;
    f.s.denomenator=f.s[0].denomenator;
    for(int i=1;i<f.size;i++)
    {
        f.s.numerator=f.s.numerator*f.s[i].denomenator+f.s[i].numerator*f.s.denomenator;
        f.s.denomenator=f.s.denomenatr*f.s[i].denomenator;

    }
    return f;
}

struct fractions output (struct fractions f)

  {
      printf("%d,%d",f.numerator,f.denomenator);

  }
  int main()
  {
      struct fractions f;
      f=getfractions();
      f=fractionsum(f);
      output(f);
      return 0;
 }
********************************************************************************************************************************************
#include <stdio.h>
#include<math.h>

struct frac
{
  int numerator;
  int denomenator;
};
struct fractions
{
  int n;
  int d;
  struct frac s[100];
  int size;
};
struct fractions getfractions ()
{
  struct fractions f;
  printf ("enter the number of fractions");
  scanf ("%d",&f.size);
  
  for (int i = 0; i < f.size; i++)
    {
      printf ("enter the numerator");
      scanf ("%d", &f.s[i].numerator);
      printf ("enter the denomenator");
      scanf ("%d", &f.s[i].denomenator);
    }
  return f;
}
struct fractions fractionsum(struct fractions f)
{
    int gcd;
    f.n=f.s[0].numerator;
    f.d=f.s[0].denomenator;
    for(int i=1;i<f.size;i++)
    {
         f.n=f.n*f.s[i].denomenator+f.s[i].numerator*f.d;
        f.d=f.d*f.s[i].denomenator;
    }
    
    for(int i=1; i <= f.n && i <= f.d; ++i)
    {
        
        if(f.n%i==0 && f.d%i==0)
            gcd = i;
    }

    f.n=f.n/gcd;
    f.d=f.d/gcd;
    return f;
}

struct fractions output (struct fractions f)

  {
      printf("%d,%d",f.n,f.d);

  }
  int main()
  {
      struct fractions f;
      f=getfractions();
      f=fractionsum(f);
      output(f);
      return 0;
 }
 *********************************************************************************************************************************************
solution program (correct program without errors)

#include <stdio.h>

struct frac
{
  int numerator;
  int denomenator;
};
struct fractions
{

  struct frac s[100];
  int size;
};


struct fractions input()
{
  struct fractions f;
  printf ("enter the number of fractions");
  scanf ("%d",&f.size);

  for (int i = 0; i < f.size; i++)
    {
      printf ("enter the numerator");
      scanf ("%d", &f.s[i].numerator);
      printf ("enter the denomenator");
      scanf ("%d", &f.s[i].denomenator);
    }
  return f;
}
struct frac compute(struct fractions f)
{
    struct frac s;
    int gcd;
    s.numerator=f.s[0].numerator;
    s.denomenator=f.s[0].denomenator;
    for(int i=1;i<f.size;i++)
    {
         s.numerator=s.numerator*f.s[i].denomenator+f.s[i].numerator*s.denomenator;
        s.denomenator=s.denomenator*f.s[i].denomenator;
    }

    for(int i=1; i <= s.numerator && i <= s.denomenator; ++i)
    {

        if(s.numerator%i==0 && s.denomenator%i==0)
            gcd = i;
    }

    s.numerator=s.numerator/gcd;
    s.denomenator=s.denomenator/gcd;
    return s;
}

void output (struct frac s)

  {

      printf("%d,%d",s.numerator,s.denomenator);

  }
  int main()
  {
      struct fractions f;
      struct frac s;
      f=input();
      s=compute(f);
      output(s);
      return 0;
 }
*******************************************************************************************************************************************
